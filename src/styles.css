/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-xl: 36rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-bold: 700;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }
  .m-8 {
    margin: calc(var(--spacing) * 8);
  }
  .m-auto {
    margin: auto;
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .box-border {
    box-sizing: border-box;
  }
  .flex {
    display: flex;
  }
  .table {
    display: table;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-5xl {
    width: var(--container-5xl);
  }
  .w-xl {
    width: var(--container-xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .flex-auto {
    flex: auto;
  }
  .flex-initial {
    flex: 0 auto;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-2xs {
    flex-basis: var(--container-2xs);
  }
  .basis-8 {
    flex-basis: calc(var(--spacing) * 8);
  }
  .basis-auto {
    flex-basis: auto;
  }
  .basis-xs {
    flex-basis: var(--container-xs);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .place-content-center {
    place-content: center;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .self-center {
    align-self: center;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .rounded-s {
    border-start-start-radius: 0.25rem;
    border-end-start-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-3 {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-base16-200 {
    border-color: rgb(var(--color-base16-200) / 1);
  }
  .border-base16-200\/75 {
    border-color: color-mix(in srgb, rgb(rgb(var(--color-base16-200) / 1) / 1) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, rgb(var(--color-base16-200) / 1) 75%, transparent);
    }
  }
  .border-base16-300 {
    border-color: rgb(var(--color-base16-300) / 1);
  }
  .border-base16-300\/75 {
    border-color: color-mix(in srgb, rgb(rgb(var(--color-base16-300) / 1) / 1) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, rgb(var(--color-base16-300) / 1) 75%, transparent);
    }
  }
  .border-base16-orange {
    border-color: rgb(var(--color-base16-orange) / 1);
  }
  .border-base16-orange\/75 {
    border-color: color-mix(in srgb, rgb(rgb(var(--color-base16-orange) / 1) / 1) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, rgb(var(--color-base16-orange) / 1) 75%, transparent);
    }
  }
  .border-base16-red {
    border-color: rgb(var(--color-base16-red) / 1);
  }
  .border-base16-red\/75 {
    border-color: color-mix(in srgb, rgb(rgb(var(--color-base16-red) / 1) / 1) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, rgb(var(--color-base16-red) / 1) 75%, transparent);
    }
  }
  .border-base16-yellow {
    border-color: rgb(var(--color-base16-yellow) / 1);
  }
  .border-base16-yellow\/75 {
    border-color: color-mix(in srgb, rgb(rgb(var(--color-base16-yellow) / 1) / 1) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, rgb(var(--color-base16-yellow) / 1) 75%, transparent);
    }
  }
  .bg-base16-100 {
    background-color: rgb(var(--color-base16-100) / 1);
  }
  .bg-base16-200 {
    background-color: rgb(var(--color-base16-200) / 1);
  }
  .object-bottom {
    object-position: bottom;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .p-16 {
    padding: calc(var(--spacing) * 16);
  }
  .p-20 {
    padding: calc(var(--spacing) * 20);
  }
  .text-center {
    text-align: center;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .hyphens-auto {
    -webkit-hyphens: auto;
    hyphens: auto;
  }
  .text-base16-300 {
    color: rgb(var(--color-base16-300) / 1);
  }
  .text-base16-600 {
    color: rgb(var(--color-base16-600) / 1);
  }
  .text-base16-700 {
    color: rgb(var(--color-base16-700) / 1);
  }
  .underline {
    text-decoration-line: underline;
  }
  .underline-offset-2 {
    text-underline-offset: 2px;
  }
  .underline-offset-3 {
    text-underline-offset: 3px;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-2 {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .-outline-offset-20 {
    outline-offset: calc(20px * -1);
  }
  .outline-offset-2 {
    outline-offset: 2px;
  }
  .outline-offset-20 {
    outline-offset: 20px;
  }
  .outline-base16-300 {
    outline-color: rgb(var(--color-base16-300) / 1);
  }
  .outline-base16-800 {
    outline-color: rgb(var(--color-base16-800) / 1);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .base16-atelier-dune-light {
    --color-base16-100: 254 251 236;
    --color-base16-200: 232 228 207;
    --color-base16-300: 166 162 140;
    --color-base16-400: 153 149 128;
    --color-base16-500: 125 122 104;
    --color-base16-600: 110 107 94;
    --color-base16-700: 41 40 36;
    --color-base16-800: 32 32 29;
    --color-base16-red: 215 55 55;
    --color-base16-orange: 182 86 17;
    --color-base16-yellow: 174 149 19;
    --color-base16-green: 96 172 57;
    --color-base16-cyan: 31 173 131;
    --color-base16-blue: 102 132 225;
    --color-base16-purple: 184 84 212;
    --color-base16-pink: 212 53 82;
    --color-base16-100-lighter: 254 251 236;
    --color-base16-100-lightest: 254 251 236;
    --color-base16-red-bright: 215 55 55;
    --color-base16-yellow-bright: 174 149 19;
    --color-base16-green-bright: 96 172 57;
    --color-base16-cyan-bright: 31 173 131;
    --color-base16-blue-bright: 102 132 225;
    --color-base16-purple-bright: 184 84 212;
  }
  .dark\:base16-atelier-dune {
    @media (prefers-color-scheme: dark) {
      --color-base16-100: 32 32 29;
      --color-base16-200: 41 40 36;
      --color-base16-300: 110 107 94;
      --color-base16-400: 125 122 104;
      --color-base16-500: 153 149 128;
      --color-base16-600: 166 162 140;
      --color-base16-700: 232 228 207;
      --color-base16-800: 254 251 236;
      --color-base16-red: 215 55 55;
      --color-base16-orange: 182 86 17;
      --color-base16-yellow: 174 149 19;
      --color-base16-green: 96 172 57;
      --color-base16-cyan: 31 173 131;
      --color-base16-blue: 102 132 225;
      --color-base16-purple: 184 84 212;
      --color-base16-pink: 212 53 82;
      --color-base16-100-lighter: 32 32 29;
      --color-base16-100-lightest: 32 32 29;
      --color-base16-red-bright: 215 55 55;
      --color-base16-yellow-bright: 174 149 19;
      --color-base16-green-bright: 96 172 57;
      --color-base16-cyan-bright: 31 173 131;
      --color-base16-blue-bright: 102 132 225;
      --color-base16-purple-bright: 184 84 212;
    }
  }
  .dark\:base16-solarized-dark {
    @media (prefers-color-scheme: dark) {
      --color-base16-100: 0 43 54;
      --color-base16-200: 7 54 66;
      --color-base16-300: 88 110 117;
      --color-base16-400: 101 123 131;
      --color-base16-500: 131 148 150;
      --color-base16-600: 147 161 161;
      --color-base16-700: 238 232 213;
      --color-base16-800: 253 246 227;
      --color-base16-red: 220 50 47;
      --color-base16-orange: 203 75 22;
      --color-base16-yellow: 181 137 0;
      --color-base16-green: 133 153 0;
      --color-base16-cyan: 42 161 152;
      --color-base16-blue: 38 139 210;
      --color-base16-purple: 108 113 196;
      --color-base16-pink: 211 54 130;
      --color-base16-100-lighter: 0 43 54;
      --color-base16-100-lightest: 0 43 54;
      --color-base16-red-bright: 220 50 47;
      --color-base16-yellow-bright: 181 137 0;
      --color-base16-green-bright: 133 153 0;
      --color-base16-cyan-bright: 42 161 152;
      --color-base16-blue-bright: 38 139 210;
      --color-base16-purple-bright: 108 113 196;
    }
  }
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
    }
  }
}
